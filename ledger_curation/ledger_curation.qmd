---
title: "Parsons Paper Company Payroll Register Curation"
author: "Kevin Jin and Nahia Pino"
date: "2023-02-20"
date-format: iso
format: pdf
editor: visual
---

```{r}
#| label: setup
#| include: false
library(mosaic)
library(tidyverse)
library(knitr)
library(kableExtra)
options(digits = 4)
```

## Introduction

The Parsons Paper Register contains over 300 pages of employee and payroll records from January 1861 to April 1869 from Parsons Paper Company in Holyoke, Massachusetts. Founded in 1853 by Joseph Parsons, Parsons Paper Company was the oldest and largest manufacturer of cotton-based high quality writing papers in Holyoke until its liquidation in 2005. The original pages of the register, which is now property of the Holyoke Public Library, were scanned on January 10, 2023 as part of this class (Mining the History of Holyoke) and screenshots are included in the analysis below. Pages contain information such as employee name and signature, role, days worked, daily pay, and total wages earned, and are organized by separate pay periods.

This document describes the process of scanning, transforming, and curating the images from the register.

## Conversion Process

```{r}
#| label: fig1
#| fig.cap: "\\label{fig:fig1}Ex. p. 253 of register - February 1st, 1867"
#| out.width: "100%"
#| echo: false
knitr::include_graphics("../jpeg/253.jpeg")
```

Figure \ref{fig:fig1} displays a sample page from the register. These images were saved as a `.tiff` file that we kept in the `tiff_original` directory in our Google Drive.

As some some pages had multiple scans (saved as `XXXa.CR2`, `XXXb.CR2`, etc.), we used bash commands in the terminal to identify any repeated images. For each page with duplicate scans, we inspected each version and selected the one with the best quality (based on quality of photo, position of page, clarity of the words, and general preference). The rejected scans were moved into a separate folder labeled `raw_deleted`, in the Google Drive. If the scan remaining in `raw` was the second version, it was renamed to remove the additional letter.

\-\-- Here describe the process to convert the CR2 files to tiff \-\--

Within the Desktop Google Drive app, using command selection every photo in the folder was selected and copy-pasted into the same `tiff_original` folder. These copies are automatically labeled as `Copy of tiff_XXX.tiff`. A new folder was created called `processing_tiff` and the copies were moved into this folder in batches of 10 using the command select function.

The process moved from the online Google Drive platform to the desktop version (which was downloaded). Within the desktop interface, 20 images were downloaded locally at a time. Starting from the image with the largest number, the image was opened with MacOS's `preview` application. In the application, first the image was cropped to remove excess space on the image. The size of the cropping was set based on making sure every part of the page itself was visible, see Figure \ref{fig:fig2} for an example. Dead space was kept in if it preserved parts of the page, for instance more bent pages would retain some dead space as the cropping was done in rectangle shapes, see Figure \ref{fig:fig3} for an example.

```{r}
#| label: fig2
#| fig.cap: "\\label{fig:fig2} Ex. cropping p. 198 of register in preview"
#| out.width: "75%"
#| echo: false
knitr::include_graphics("lc_images/Figure_2.jpg")
```

```{r}
#| label: fig3
#| fig.cap: "\\label{fig:fig3} p. 304 of register, see the top and bottom where the pages bend."
#| out.width: "75%"
#| echo: false
knitr::include_graphics("lc_images/Figure_3.jpg")
```

```{r}
#| label: fig4
#| fig.cap: "\\label{fig:fig4} preview display of p. 198 of register, a red arrow was added to the image indicating where the adjust color interface is"
#| out.width: "75%"
#| echo: false
knitr::include_graphics("lc_images/Figure_4.jpg")
```

```{r}
#| label: fig5
#| fig.cap: "\\label{fig:fig5} preview display of p. 198 of register after color correcting. In the bottom left is the colord adjustment window. The 'Auto Levels' button was used for the adjustments."
#| out.width: "75%"
#| echo: false
knitr::include_graphics("lc_images/Figure_5.jpg")
```

After rotating, the color correction for the image was opened in preview and the automatic correction was applied, see Figures \ref{fig:fig4} and \ref{fig:fig5}.

Once all of the edits for the image were made in preview, the image would be renamed to remove the `Copy of` and leave only the number `XXX.tiff`. This indicates that the image has been processed. The process was then repeated to each of the batch of 20 images downloaded locally. Once all of the images were processed in a batch, the download was removed for the batch and another batch of 20 was downloaded and processed. This continued until every image was processed.

## Check for Missing Pages

To identify pages were missing, we created a function that will allow us to see if any file was missing given a sequence of numbers. The function we used is replicated below as the `find_missing_pages` method.

```{r}
find_missing_pages <- function(start = 0, end = 10, 
                               path = "/", suffix = ".png"){
  files_toCheck <- paste0(path, sprintf("%03d", start:end), suffix)
  missing_files <- files_toCheck[!file.exists(files_toCheck)]
  return(missing_files)
}
```

From this method, we were able to see that beyond the pages that we know are missing, we were missing the scans for page 368 and 395 (though page 395 was later found). This was really helpful for us as we were able to make another copy of the missing page when we visited the Holyoke Public Library. With the images all converted to `jpegs`, we were now able to save it into our GitHub repository, and created a interactive Shiny display to help display the images and view the register.

## Viewing the Register

In addition to the publicly accessible Google Drive (<https://drive.google.com/drive/folders/18Aw57Hhga52E3skMttF7sxDfL6KWO-7q?usp=sharing>) that includes the raw (`.CR2`), `.tiff`, and `.jpeg` files, we have created a web interface to view the scanned pages of the register. This interactive web applet can be found at <https://r.amherst.edu/apps/nhorton/Parsons-Paper>. Each page has its own radio button in the `pages` tab. More details about Parsons Paper Company and the archive are detailed in the `about` tab.

## Next Steps: Adding to the Digital Commonwealth

We eventually want to submit our results and our project to the Commonwealth of Massachusetts digital archive. Through email communication with the digital commonwealth that a fellow classmate of ours did, we found the required metadata necessary for submission to the archive. They are listed below:

**Required:**

-   file name

-   file path

-   Type of resource

-   BASIC genre/form

-   BASIC genre/form: Value URI

-   Date type

-   Digital Origin

-   Host collection

-   Physical location (library)

-   Rights

-   License

-   Description standard

-   Repository Set Name

We hope to be able to submit our collection to the archive by following these guidelines.

## Acknowledgements

We greatly appreciate and would like to thank Eileen Crosby (Holyoke Public Library), Tim Pinault (Amherst College), and Zoe Jacobs Feinstein (Amherst College) for their assistance with this project.
